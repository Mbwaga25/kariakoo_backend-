# Generated by Django 4.1.13 on 2025-06-10 05:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state_province', models.CharField(blank=True, max_length=100, null=True, verbose_name='State/Province')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('opening_hours', models.JSONField(blank=True, null=True)),
                ('store_type', models.CharField(choices=[('retail', 'Retail'), ('wholesale', 'Wholesale'), ('both', 'Retail & Wholesale')], default='retail', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_stores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoreProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('wholesale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('stock', models.PositiveIntegerField(default=0)),
                ('low_stock_threshold', models.PositiveIntegerField(default=10, help_text='Alert when stock reaches this level')),
                ('is_available', models.BooleanField(default=True)),
                ('wholesale_minimum_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('sku_in_store', models.CharField(blank=True, max_length=100, null=True)),
                ('location_in_store', models.CharField(blank=True, max_length=100, null=True)),
                ('last_stock_update', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_listings', to='products.product')),
                ('product_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='store_products', to='products.productvariant')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_products', to='stores.store')),
            ],
            options={
                'verbose_name': 'Store Product',
                'verbose_name_plural': 'Store Products',
                'ordering': ['-last_stock_update'],
            },
        ),
        migrations.AddIndex(
            model_name='storeproduct',
            index=models.Index(fields=['store', 'product'], name='stores_stor_store_i_d8d7d4_idx'),
        ),
        migrations.AddIndex(
            model_name='storeproduct',
            index=models.Index(fields=['is_available', 'stock'], name='stores_stor_is_avai_d3ceff_idx'),
        ),
        migrations.AddConstraint(
            model_name='storeproduct',
            constraint=models.UniqueConstraint(fields=('store', 'product'), name='unique_product_per_store'),
        ),
        migrations.AlterUniqueTogether(
            name='storeproduct',
            unique_together={('store', 'product')},
        ),
    ]

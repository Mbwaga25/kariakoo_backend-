# Generated by Django 4.1.13 on 2025-06-10 05:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(blank=True, max_length=255, verbose_name='Client Name')),
                ('client_phone', models.CharField(blank=True, max_length=20, verbose_name='Client Phone')),
                ('client_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Client Email')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Order Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20, verbose_name='Status')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total Amount')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total Discount Applied')),
                ('estimated_delivery_start', models.DateTimeField(blank=True, null=True, verbose_name='Estimated Delivery Start')),
                ('estimated_delivery_end', models.DateTimeField(blank=True, null=True, verbose_name='Estimated Delivery End')),
                ('currency', models.CharField(default='TZS', max_length=3, verbose_name='Currency')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Internal Notes')),
                ('customer_comment', models.TextField(blank=True, null=True, verbose_name='Customer Comment')),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_orders', to='customers.address', verbose_name='Billing Address')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Promo Code')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Discount Amount')),
                ('is_percentage', models.BooleanField(default=False, verbose_name='Is Percentage Discount')),
                ('valid_from', models.DateTimeField(verbose_name='Valid From')),
                ('valid_to', models.DateTimeField(verbose_name='Valid To')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('max_uses', models.PositiveIntegerField(default=0, verbose_name='Maximum Uses')),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name='Used Count')),
            ],
            options={
                'verbose_name': 'Promo Code',
                'verbose_name_plural': 'Promo Codes',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=255, unique=True, verbose_name='Transaction ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Amount')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Transaction Time')),
                ('payment_method', models.CharField(choices=[('card', 'Credit/Debit Card'), ('mobile', 'Mobile Payment'), ('cash', 'Cash on Delivery'), ('bank', 'Bank Transfer')], max_length=20, verbose_name='Payment Method')),
                ('status', models.CharField(choices=[('success', 'Success'), ('pending', 'Pending'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20, verbose_name='Transaction Status')),
                ('response_data', models.JSONField(blank=True, null=True, verbose_name='Gateway Response')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='orders.order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('price_at_purchase', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price at Purchase')),
                ('final_price_per_unit', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Final Price Per Unit')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total Price for Item')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.product', verbose_name='Product')),
                ('product_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.productvariant', verbose_name='Product Variant')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='stores.store', verbose_name='Store')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='promo_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='orders.promocode', verbose_name='Applied Promo Code'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_orders', to='customers.address', verbose_name='Shipping Address'),
        ),
        migrations.AddField(
            model_name='order',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='stores.store', verbose_name='Store'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(condition=models.Q(('product_variant__isnull', False)), fields=('order', 'product', 'product_variant'), name='unique_product_variant_per_order'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(condition=models.Q(('product_variant__isnull', True)), fields=('order', 'product'), name='unique_product_per_order'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='orders_orde_status_c6dd84_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_date'], name='orders_orde_order_d_d71205_idx'),
        ),
    ]

"""
Django settings for medics_api project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x$x2_bpic144!)z3=i)we!dl0gpizpps08xha8c-_6_e49r!83'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'graphene_django',
    'graphql_jwt.refresh_token.apps.RefreshTokenConfig',
    'corsheaders',
    'django_seed',
    'users',
    'customers',
    'products',
    'stores',
    'orders',
    'payment',
    'ads',
    'order_call',
    'vendors'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'medics_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # This line is important
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'medics_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'kariakoo', 
        'USER': 'root',  
        'PASSWORD': '',  
        'HOST': 'localhost', 
        'PORT': '3306', 
        'OPTIONS': {
            'charset': 'utf8mb4',
        },
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'dawafaster',  # Replace with your PostgreSQL database name
#         'USER': 'postgres',  # Replace with your PostgreSQL username
#         'PASSWORD': '123456',  # Replace with your PostgreSQL password
#         'HOST': 'localhost',  # Or your PostgreSQL server address
#         'PORT': '5432',  # Default PostgreSQL port
#     }
# }

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv("MAIL_HOST", "smtp.googlemail.com")
EMAIL_PORT = int(os.getenv("MAIL_PORT", 465))
EMAIL_HOST_USER = os.getenv("MAIL_USERNAME")
EMAIL_HOST_PASSWORD = os.getenv("MAIL_PASSWORD")

# Choose encryption method
MAIL_ENCRYPTION = os.getenv("MAIL_ENCRYPTION", "ssl").lower()
EMAIL_USE_TLS = MAIL_ENCRYPTION == "tls"
EMAIL_USE_SSL = MAIL_ENCRYPTION == "ssl"

DEFAULT_FROM_EMAIL = os.getenv("MAIL_FROM_ADDRESS", "noreply@example.com")
EMAIL_FROM_NAME = os.getenv("MAIL_FROM_NAME", "Your App Name")

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

GRAPHENE = {
    'SCHEMA': 'medics_api.schema.schema', 
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
    ],
}
AUTHENTICATION_BACKENDS = [
    'graphql_jwt.backends.JSONWebTokenBackend',
    'django.contrib.auth.backends.ModelBackend', # Django's default
]

# GRAPHQL_JWT = {
#     'JWT_VERIFY_EXPIRATION': True,
#     'JWT_LONG_RUNNING_REFRESH_TOKEN': True, # Allows refresh tokens to be used longer
#     'JWT_EXPIRATION_DELTA': timedelta(minutes=15), # Access token lifetime
#     'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=7), # Refresh token lifetime
#     # 'JWT_ALLOW_ANY_HANDLER': lambda **payload: True, # If you need to allow any user for certain actions
# }

# settings.py
GRAPHQL_JWT = {
    "JWT_VERIFY_EXPIRATION": True,
    "JWT_LONG_RUNNING_REFRESH_TOKEN": True,
    "JWT_EXPIRATION_DELTA": timedelta(minutes=15),
    "JWT_REFRESH_EXPIRATION_DELTA": timedelta(days=7),
    "JWT_SECRET_KEY": SECRET_KEY, 
    "JWT_ALGORITHM": "HS256",
    "JWT_ALLOW_REFRESH": True,
}


CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:3000",
    "http://localhost:3000",
]

CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:3000",
    "http://localhost:3000",
]


CORS_ALLOW_CREDENTIALS = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


ADMIN_SITE_HEADER = "DAWA FASTER"
ADMIN_SITE_TITLE = "DAWA FASTER"
ADMIN_INDEX_TITLE = "Welcome to Your Project Admin" 


# settings.py
JAZZMIN_SETTINGS = {
    "site_title": "Your Project Admin",
    "site_header": "Your Project",
    "site_brand": "Your Project",
    "site_icon": "img/favicon.ico", # Path to your favicon in staticfiles
    # Add your custom settings here
    # "welcome_sign": "Welcome to the Medics Admin Panel",
    # "topmenu_links": [...],
    # "usermenu_links": [...],
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [], 
    "order_with_respect_to": ["products", "users"], # Order apps
    "custom_css": None, # Path to your custom CSS if needed
    "custom_js": None,
    "show_ui_builder": True, # For easy live customization (turn off in production)
    # ... many more options
}

# JAZZMIN_UI_TWEAKS (optional, for even more granular control)
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-dark",
    "accent": "accent-primary",
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "united", # Choose from 'darkly', 'flatly', 'united', etc.
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    }
}